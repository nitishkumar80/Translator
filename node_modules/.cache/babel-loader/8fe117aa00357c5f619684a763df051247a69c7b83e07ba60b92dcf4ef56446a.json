{"ast":null,"code":"var _jsxFileName = \"/Users/nitish/Desktop/Web Development/Translator/translate-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nfunction App() {\n  _s();\n  const [to, setTo] = useState(\"\");\n  const [from, setFrom] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [languages, setLanguages] = useState([]);\n  useEffect(() => {\n    // Fetch the list of languages when the component mounts\n    axios.get('https://libretranslate.com/languages', {\n      headers: {\n        'accept': 'application/json'\n      }\n    }).then(res => {\n      // Extract the language options from the response\n      const languageOptions = Object.keys(res.data).map(langCode => ({\n        code: langCode,\n        name: res.data[langCode]\n      }));\n      setLanguages(languageOptions);\n    }).catch(error => {\n      console.error('Error fetching languages:', error);\n    });\n  }, []); // Empty dependency array to run this effect only once on mount\n\n  const handleFromChange = event => {\n    setFrom(event.target.value);\n  };\n  const handleToChange = event => {\n    setTo(event.target.value);\n  };\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n\n  // You can add a function here to handle translation and update the output state\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"From:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      value: from,\n      onChange: handleFromChange,\n      children: languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: language.code,\n        children: language.name\n      }, language.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \"To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n      value: to,\n      onChange: handleToChange,\n      children: languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: language.code,\n        children: language.name\n      }, language.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: \"50\",\n        rows: \"8\",\n        value: input,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: \"50\",\n        rows: \"8\",\n        value: output,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J6AC8zdI+Ox5S7b4dw49dsUuGsI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","axios","require","App","_s","to","setTo","from","setFrom","output","setOutput","input","setInput","languages","setLanguages","get","headers","then","res","languageOptions","Object","keys","data","map","langCode","code","name","catch","error","console","handleFromChange","event","target","value","handleToChange","handleInputChange","className","children","onChange","language","fileName","_jsxFileName","lineNumber","columnNumber","cols","rows","readOnly","_c","$RefreshReg$"],"sources":["/Users/nitish/Desktop/Web Development/Translator/translate-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nconst axios = require('axios');\n\nfunction App() {\n  const [to, setTo] = useState(\"\");\n  const [from, setFrom] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [languages, setLanguages] = useState([]);\n\n  useEffect(() => {\n    // Fetch the list of languages when the component mounts\n    axios.get('https://libretranslate.com/languages', {\n      headers: { 'accept': 'application/json' }\n    })\n    .then(res => {\n      // Extract the language options from the response\n      const languageOptions = Object.keys(res.data).map(langCode => ({\n        code: langCode,\n        name: res.data[langCode]\n      }));\n      setLanguages(languageOptions);\n    })\n    .catch(error => {\n      console.error('Error fetching languages:', error);\n    });\n  }, []); // Empty dependency array to run this effect only once on mount\n\n  const handleFromChange = (event) => {\n    setFrom(event.target.value);\n  };\n\n  const handleToChange = (event) => {\n    setTo(event.target.value);\n  };\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  // You can add a function here to handle translation and update the output state\n\n  return (\n    <div className=\"App\">\n      From:\n      <select value={from} onChange={handleFromChange}>\n        {languages.map((language) => (\n          <option key={language.code} value={language.code}>\n            {language.name}\n          </option>\n        ))}\n      </select>\n\n      To:\n      <select value={to} onChange={handleToChange}>\n        {languages.map((language) => (\n          <option key={language.code} value={language.code}>\n            {language.name}\n          </option>\n        ))}\n      </select>\n\n      <div>\n        <textarea cols=\"50\" rows=\"8\" value={input} onChange={handleInputChange}></textarea>\n      </div>\n      <div>\n        <textarea cols=\"50\" rows=\"8\" value={output} readOnly></textarea>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}